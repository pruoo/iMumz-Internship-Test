1. How do you stay updated about topics in Flutter/Dart and active in the community? (Discord/Slack/MeetUps/Twitter)
A) I stay updated in Flutter by doing work with it and regulary follow it's events and I am active on Discord and Slack.

2. Your most used IDE/keyboard shortcuts when coding. (for Flutter/Dart)
A) Mostly I use VS Code and 
    a. Ctrl + tab:  for swithing btw Tabs
    b. Ctrl + d: for selecting same kind of words
    c. Ctrl + arrow: for jump to next word
    d. Ctrl + shift + arrow: for selecting and jumping to words
    e. shift + alt + arrow: for copying entire row up or down
    
    and many more

3. How do you approach responsiveness when coding an entire screen? (You can attach code snippet for better explanation).
A) 


=============================<<<<<<              >>>>>>=============================
=============================<<<<<<              >>>>>>=============================
=============================<<<<<< Code snippet >>>>>>=============================
=============================<<<<<<              >>>>>>=============================
=============================<<<<<<              >>>>>>=============================
State management used is Getx

import 'dart:io';

import 'package:XXXXX/constants/constants.dart';
import 'package:flutter/material.dart';
import 'package:blobs/blobs.dart';
import 'package:flutter_device_type/flutter_device_type.dart';
import 'package:get/get.dart';

import '../components/chat_room_list/chat_room_list.dart';
import '../components/chat_room_list/new_matches.dart';
import '../components/navbar/vertical_navbar.dart';
import '../../controllers/blob_controller.dart';
import '../../controllers/controllers.dart';

class ChatUI extends StatelessWidget {
  Widget animatedPositioned(double left, double top, controller) {
    return AnimatedPositioned(
      left: left,
      top: top,
      duration: Duration(milliseconds: 100),
      child: Blob.animatedRandom(
        size: 400,
        edgesCount: 8,
        minGrowth: 2,
        controller: controller,
        styles: BlobStyles(
          color: Colors.white.withOpacity(0.9),
        ),
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    // SystemChrome.setPreferredOrientations(
    //     [DeviceOrientation.landscapeLeft, DeviceOrientation.landscapeRight]);
    ChatController chatController;
    ThemeController themeController;
    BlobGetController blobGetController;
    chatController = Get.find<ChatController>();
    themeController = Get.find();
    blobGetController = Get.put(BlobGetController());
    final isDark = themeController.isDarkModeOn(context);
    final width = Get.width;
    return
        Scaffold(
    body: SafeArea(
        child: Obx(
          () => Container(
            child: Stack(
              children: [
                if (themeController.isDarkModeOn(context))
                  Stack(
                    children: [
                      Container(),
                      animatedPositioned(400, 100, blobGetController.blobCtrl1),
                      animatedPositioned(-100, 0, blobGetController.blobCtrl2),
                      animatedPositioned(140, -10, blobGetController.blobCtrl3),
                      animatedPositioned(
                          400, -200, blobGetController.blobCtrl4),
                    ],
                  ),
                Container(height: Get.height, width: Get.width),
                Positioned(
                  top: AppBar().preferredSize.height,
                  bottom: 0,
                  right: 0,
                  left: 0,
                  child: Row(
                    children: [
                      NewMatch(
                          themeController.isDarkModeOn(context) ? true : false,
                          width),
                      if (!themeController.isDarkModeOn(context))
                        Container(
                          height: Get.height,
                          width: 1,
                          decoration: BoxDecoration(color: Color(0xFFC8D7D7)),
                        ),
                      chatController.listchatrooms.value.length == 0
                          ? Expanded(
                              child: Container(
                                // height: Get.height,
                                // width: Get.width / 2,
                                alignment: Alignment.center,
                                padding: EdgeInsets.all(20),
                                margin: themeController.isDarkModeOn(context)
                                    ? EdgeInsets.all(10)
                                    : EdgeInsets.all(0),
                                decoration: themeController
                                        .isDarkModeOn(context)
                                    ? BoxDecoration(
                                        borderRadius: BorderRadius.circular(15),
                                        color: Colors.white.withOpacity(0.9),
                                      )
                                    : BoxDecoration(
                                        // image: DecorationImage(
                                        //     image: AssetImage(
                                        //         'assets/profile_page/bg/bg1.png'),
                                        //     fit: BoxFit.cover)
                                        ),
                                child: Text(
                                  'No Matches Yet!\n Keep Trying ðŸ˜‰',
                                  style: TextStyle(
                                    fontSize: 32,
                                    fontFamily: 'Handlee',
                                    fontWeight: FontWeight.w800,
                                  ),
                                ),
                              ),
                            )
                          : Expanded(
                              child: ChatRoomList(
                                themeController.isDarkModeOn(context)
                                    ? true
                                    : false,
                              ),
                            )
                    ],
                  ),
                ),
                // ---- CUSTOM APPBAR
                Positioned(
                  top: 0,
                  right: 0,
                  left: 0,
                  child: CustomAppBar(isDark, width),
                ),
                if (Device.get().hasNotch && Platform.isIOS)
                  Positioned(
                    bottom: 0,
                    top: Platform.isIOS
                        ? Device.get().hasNotch
                            ? 0
                            : 10
                        : 0,
                    right: Platform.isIOS
                        ? Device.get().hasNotch
                            ? -10
                            : 0
                        : 0,
                    child: SafeArea(
                      bottom: false,
                      child: VerticalNavBar(
                        // height: Get.height,
                        // width: Get.width,
                        index: 1,
                        isDarkTheme: themeController.isDarkModeOn(context),
                      ),
                    ),
                  )
              ],
            ),
          ),
        ),
      ),
      floatingActionButtonLocation:
          FloatingActionButtonLocation.miniCenterDocked,
      floatingActionButton: (Device.get().hasNotch && Platform.isIOS)
          ? Container()
          : SafeArea(
              child: Container(
                padding: EdgeInsets.only(
                  top: 30,
                  right: 0,
                ),
                child: VerticalNavBar(
                  // height: Get.height,
                  // width: Get.width,
                  index: 1,
                  isDarkTheme: themeController.isDarkModeOn(context),
                ),
              ),
            ),
    );
    //   ],
    // );
  }
}

class CustomAppBar extends StatelessWidget {
  CustomAppBar(this.isDark, this.width);
  final bool isDark;
  final double width;
  @override
  Widget build(BuildContext context) {
    return Container(
      decoration: BoxDecoration(
        color: Colors.white,
        boxShadow: [
          BoxShadow(
            blurRadius: 2,
            color: isDark
                ? Colors.grey.withOpacity(0.7)
                : AppThemes.lightTheme.primaryColor.withOpacity(0.1),
            offset: Offset(0, 4),
          ),
          BoxShadow(
            blurRadius: 2,
            color: Colors.black54,
          ),
        ],
      ),
      child: Column(
        mainAxisSize: MainAxisSize.min,
        children: [
          Container(
            height: 0.1,
            width: Get.width,
            decoration: BoxDecoration(color: Color(0xFFC8D7D7)),
          ),
          Row(
            children: [
              Container(
                color: Colors.white,
                width: isDark ? Get.width * 1.4 / 4 : width * 1.3 / 4,
                height: AppBar().preferredSize.height,
                alignment: Alignment.center,
                child: Text(
                  'New matches',
                  style: Get.theme.textTheme.headline5.copyWith(
                    color: Color(0xFF363030),
                    fontWeight: isDark ? FontWeight.w600 : FontWeight.w400,
                    fontFamily: isDark ? 'WorkSans' : 'Handlee',
                    fontSize: 20,
                  ),
                ),
              ),
              if (!isDark)
                Container(
                  height: AppBar().preferredSize.height,
                  width: 1,
                  decoration: BoxDecoration(color: Color(0xFFC8D7D7)),
                ),
              Expanded(
                child: SafeArea(
                  top: false,
                  left: false,
                  bottom: false,
                  child: Padding(
                    padding: const EdgeInsets.only(left: 20, right: 90),
                    child: Row(
                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                      children: [
                        Text(
                          'Messages',
                          style: Get.theme.textTheme.headline5.copyWith(
                            color: Color(0xFF363030),
                            fontWeight:
                                isDark ? FontWeight.w600 : FontWeight.w400,
                            fontFamily: isDark ? 'WorkSans' : 'Handlee',
                            fontSize: 20,
                          ),
                        ),
                        GestureDetector(
                          onTap: () {},
                          child: Card(
                            shape: RoundedRectangleBorder(
                                borderRadius: BorderRadius.circular(20)),
                            elevation: 10,
                            color: isDark
                                ? AppThemes.ebonyClay
                                : AppThemes.juneBud,
                            child: Padding(
                              padding: const EdgeInsets.symmetric(
                                  horizontal: 10, vertical: 5),
                              child: Row(
                                mainAxisSize: MainAxisSize.min,
                                children: [
                                  Text('Need help?',
                                      style: TextStyle(
                                        color: Colors.white,
                                        fontSize: 10,
                                      )),
                                  SizedBox(width: 4),
                                  Image.asset(
                                    'assets/logos/XXXXX_600.png',
                                    height: 13,
                                    width: 13,
                                    // color: Colors.white,
                                    fit: BoxFit.cover,
                                  )
                                ],
                              ),
                            ),
                          ),
                        ),
                        // SizedBox(width: 50),
                      ],
                    ),
                  ),
                ),
              ),
            ],
          ),
        ],
      ),
    );
  }
}

